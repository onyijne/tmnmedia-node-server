<IfModule mod_ssl.c>
<VirtualHost *:443>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin bikos@tmnmedia.com.ng
     ServerName socket.tmnmedia.com.ng
        
   # <Proxy balancer://mycluster>
   #    BalancerMember http://tmnmedia.com.ng:2020 loadfactor=6
   #    BalancerMember http://tmnmedia.com.ng:2021
    #    ProxySet lbmethod=bytraffic
	# </Proxy>

    ProxyRequests Off
	ProxyPreserveHost On
	ProxyPass / http://tmnmedia.com.ng:2020/
	ProxyPassReverse / http://tmnmedia.com.ng:2020/
    RewriteEngine on
	RewriteCond %{HTTP:Upgrade} websocket [NC]
	RewriteCond %{HTTP:Connection} upgrade [NC]
	RewriteRule ^/?(.*) "ws://tmnmedia.com.ng:2020/$1" [P,L]
    SetEnvIf Origin "http(s)?://(www\.)?(tmnmedia.com.ng|app.tmnmedia.com.ng|console.monaca.mobi|monaca.mobi|localhost|local.tmnmedia.com.ng)$" AccessControlAllowOrigin=$0
    #Header always set Access-Control-Allow-Origin %{AccessControlAllowOrigin}e env=AccessControlAllowOrigin
    Header always set Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token"
    Header always set Access-Control-Allow-Methods 'OPTIONS, POST, GET'
    #Header always set Access-Control-Allow-Credentials true
    Header always set Vary Origin
    #Header merge Vary Origin
    RequestHeader set X-Forwarded-Port "443"
    RequestHeader set X-Forwarded-Proto "https"
    

	# ProxyPass / balancer://mycluster/
	# ProxyPassReverse / balancer://mycluster/

	ErrorLog /var/www/socket/web/socket-error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined
    SSLProxyEngine on
    SSLProxyProtocol all -SSLv2 -SSLv3


Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/tmnmedia.com.ng/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/tmnmedia.com.ng/privkey.pem
</VirtualHost>
</IfModule>
<IfModule mod_ssl.c>
<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin bikos@tmnmedia.com.ng
    ServerName socket.tmnmedia.com.ng
         
   # <Proxy balancer://mycluster>
   #    BalancerMember http://tmnmedia.com.ng:2020 loadfactor=6
   #    BalancerMember http://tmnmedia.com.ng:2021
    #    ProxySet lbmethod=bytraffic
	# </Proxy>
    ProxyRequests Off
	ProxyPreserveHost On
	ProxyPass / http://tmnmedia.com.ng:2020/
	ProxyPassReverse / http://tmnmedia.com.ng:2020/
    RewriteEngine on
	RewriteCond %{HTTP:Upgrade} websocket [NC]
	RewriteCond %{HTTP:Connection} upgrade [NC]
	RewriteRule ^/?(.*) "ws://tmnmedia.com.ng:2020/$1" [P,L]
    SetEnvIf Origin "http(s)?://(www\.)?(tmnmedia.com.ng|app.tmnmedia.com.ng|console.monaca.mobi|monaca.mobi|localhost|local.tmnmedia.com.ng)$" AccessControlAllowOrigin=$0
    #Header always set Access-Control-Allow-Origin %{AccessControlAllowOrigin}e env=AccessControlAllowOrigin
    Header always set Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token"
    Header always set Access-Control-Allow-Methods 'OPTIONS, POST, GET'
   # Header always set Access-Control-Allow-Credentials true
    Header always set Vary Origin
    #Header merge Vary Origin
    RequestHeader set X-Forwarded-port "80"

	# ProxyPass / balancer://mycluster/
	# ProxyPassReverse / balancer://mycluster/

	ErrorLog /var/www/socket/web/socket-error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined
#RewriteEngine on
#RewriteCond %{SERVER_NAME} =socket.tmnmedia.com.ng
#RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]


</VirtualHost>
</IfModule>